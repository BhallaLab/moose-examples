- [ ] ./../kinetics/test_ksolve.py

```
  Elements under /n[0]
  /n[0]/compt
  /n[0]/shaft0
  /n[0]/head0
  /n[0]/shaft1
  /n[0]/head1
  /n[0]/shaft2
  /n[0]/head2
  /n[0]/shaft3
  /n[0]/head3
  /n[0]/shaft4
  /n[0]/head4
  /n[0]/hsolve
  ('running at dt =', 2e-05)
  ('running at dt =', 5e-05)
  ('running at dt =', 0.0001)
  of 32.0 degree Celsius
  INFO:root:Reading morphology from /home1/dilawars/Work.SVN/GITHUB/BhallaLab/moose-examples/neuroml/CA1PyramidalCell/cells_channels/CA1soma.morph.xml
  INFO:root:Loading cell CA1soma into /library .
  INFO:root:readMorphML using combineSegments = False
  INFO:root:Loading mechanism hd_minus73 into library.
  INFO:root:Loading mechanism kdr into library.
  INFO:root:Loading mechanism kap into library.
  INFO:root:Loading mechanism na3 into library.
  INFO:root:Loading mechanism nax into library.
  INFO:root:Loading mechanism kad into library.
  INFO:root:Loading mechanism hd_minus73 
  INFO:root:Loading mechanism kdr 
  INFO:root:Loading mechanism kap 
  INFO:root:Loading mechanism na3 
  INFO:root:Loading mechanism pasCA1 
  INFO:root:Comparment Seg0_soma_0_0 inject 3e-12 A.
  INFO:root:Comparment Seg0_soma_0_0 inject 3e-12 A.
  INFO:root:Loading mechanism nax 
  INFO:root:Loading mechanism kad 
  INFO:root:Finished loading into library, cell: CA1soma 
  moose.nml.networkml: INFO     Creating population CA1group of cell type CA1soma
  INFO:moose.nml.networkml:Creating population CA1group of cell type CA1soma
  moose.nml.networkml: INFO     Creating input under /elec 
  INFO:moose.nml.networkml:Creating input under /elec 
  Reinit MOOSE ... 
  Solver: ee
  Using exp euler
  Using exp euler
  Running ... 
  Showing plots ...
```
- [ ] ./../neuroml/allChannelsCell/allChannelsCell.py

```
      Selecting a channel randomly form ['H_STG', 'CaS_STG', 'CaT_STG', 'KA_STG', 'Kd_STG', 'Na_STG']
      Selected CaS_STG
      Traceback (most recent call last):
        File "ChannelTest.py", line 41, in <module>
          for varidx in range(len(mechanism_vars)/2): # loop over each inf and tau
      TypeError: 'float' object cannot be interpreted as an integer
      dilawars/Work.SVN/GITHUB/BhallaLab/moose-examples/neuroml/allChannelsCell/cells_cINFO:root:Loading mechanism KINFO:root:Loading ceINFO:root:Loading mechanism KCa_STG into library.
      L using combineSegments = False
      INFO:root:Loading mechanism Gran_KDr_98 into library.
       direct cause of the following exception:
      
      Traceback (most recent call last):
        File "twoLIFxml_firing.py", line 47, in <module>
          populationDict,projectionDict = create_twoLIFs()
        File "twoLIFxml_firing.py", line 35, in create_twoLIFs
          NML.readNetworkMLFromFile('twoLIFs.net.xml', {}, params={})
        File "/home1/dilawars/Work/GITHUB/DILAWAR/moose-core/_build/python/moose/neuroml/NetworkML.py", line 76, in readNetworkMLFromFile
          return self.readNetworkML(root_element,cellSegmentDict,params,root_element.attrib['lengthUnits'])
        File "/home1/dilawars/Work/GITHUB/DILAWAR/moose-core/_build/python/moose/neuroml/NetworkML.py", line 93, in readNetworkML
          self.network.findall(".//{"+nml_ns+"}population")
        File "/home1/dilawars/Work/GITHUB/DILAWAR/moose-core/_build/python/moose/neuroml/NetworkML.py", line 92, in <listcomp>
          [ self.createPopulation(pop) for pop in
        File "/home1/dilawars/Work/GITHUB/DILAWAR/moose-core/_build/python/moose/neuroml/NetworkML.py", line 184, in createPopulation
          cellDict = mmlR.readMorphMLFromFile(model_path, self.params)
        File "/home1/dilawars/Work/GITHUB/DILAWAR/moose-core/_build/python/moose/neuroml/MorphML.py", line 79, in readMorphMLFromFile
          cellDict = self.readMorphML(cell,params,lengthUnits)
        File "/home1/dilawars/Work/GITHUB/DILAWAR/moose-core/_build/python/moose/neuroml/MorphML.py", line 267, in readMorphML
          moosechannelval = moose.Mstring(moosechannel.path+'/thresh')
      SystemError: <class 'moose.moose.Mstring'> returned a result with an error set
```
- [ ] ./../neuroml/lobster_pyloric/STG_net.py

```
        Selecting a channel randomly form ['H_STG', 'CaS_STG', 'CaT_STG', 'KA_STG', 'Kd_STG', 'Na_STG']
        Selected CaS_STG
        Traceback (most recent call last):
          File "ChannelTest.py", line 41, in <module>
            for varidx in range(len(mechanism_vars)/2): # loop over each inf and tau
        TypeError: 'float' object cannot be interpreted as an integer
        dilawars/Work.SVN/GITHUB/BhallaLab/moose-examples/neuroml/allChannelsCell/cells_cINFO:root:Loading mechanism KINFO:root:Loading ceINFO:root:Loading mechanism KCa_STG into library.
        L using combineSegments = False
        INFO:root:Loading mechanism Gran_KDr_98 into library.
         direct cause of the following exception:
        
        Traceback (most recent call last):
          File "twoLIFxml_firing.py", line 47, in <module>
            populationDict,projectionDict = create_twoLIFs()
          File "twoLIFxml_firing.py", line 35, in create_twoLIFs
            NML.readNetworkMLFromFile('twoLIFs.net.xml', {}, params={})
          File "/home1/dilawars/Work/GITHUB/DILAWAR/moose-core/_build/python/moose/neuroml/NetworkML.py", line 76, in readNetworkMLFromFile
            return self.readNetworkML(root_element,cellSegmentDict,params,root_element.attrib['lengthUnits'])
          File "/home1/dilawars/Work/GITHUB/DILAWAR/moose-core/_build/python/moose/neuroml/NetworkML.py", line 93, in readNetworkML
            self.network.findall(".//{"+nml_ns+"}population")
          File "/home1/dilawars/Work/GITHUB/DILAWAR/moose-core/_build/python/moose/neuroml/NetworkML.py", line 92, in <listcomp>
            [ self.createPopulation(pop) for pop in
          File "/home1/dilawars/Work/GITHUB/DILAWAR/moose-core/_build/python/moose/neuroml/NetworkML.py", line 184, in createPopulation
            cellDict = mmlR.readMorphMLFromFile(model_path, self.params)
          File "/home1/dilawars/Work/GITHUB/DILAWAR/moose-core/_build/python/moose/neuroml/MorphML.py", line 79, in readMorphMLFromFile
            cellDict = self.readMorphML(cell,params,lengthUnits)
          File "/home1/dilawars/Work/GITHUB/DILAWAR/moose-core/_build/python/moose/neuroml/MorphML.py", line 267, in readMorphML
            moosechannelval = moose.Mstring(moosechannel.path+'/thresh')
        SystemError: <class 'moose.moose.Mstring'> returned a result with an error set
```
- [ ] ./../unsorted/ksolve_with_heavy_load.py

```
      Traceback (most recent call last):
        File "test_tuftedib.py", line 33, in <module>
          from cell_test_util import SingleCellCurrentStepTest
        File "/home1/dilawars/Work.SVN/GITHUB/BhallaLab/moose-examples/traub_2005/py/cell_test_util.py", line 46, in <module>
          import config
        File "/home1/dilawars/Work.SVN/GITHUB/BhallaLab/moose-examples/traub_2005/py/config.py", line 33, in <module>
          import settings
        File "/home1/dilawars/Work.SVN/GITHUB/BhallaLab/moose-examples/traub_2005/py/settings.py", line 31, in <module>
          import exceptions
      ModuleNotFoundError: No module named 'exceptions'
```
- [ ] ./../snippets/GraupnerBrunel2012_STDPfromCaPlasticity.py

```
    timeout: the monitored command dumped core
```
- [ ] ./../snippets/findChemSteadyState.py

```
  Starting simulation for 0.1
  Simulated till 0.01. Left: 0.09. 0.01 of simulation took: 0.013638 s
  Simulated till 0.02. Left: 0.08. 0.01 of simulation took: 0.027455 s
  Simulated till 0.03. Left: 0.07. 0.01 of simulation took: 0.022649 s
  Simulated till 0.04. Left: 0.06. 0.01 of simulation took: 0.011963 s
  Simulated till 0.05. Left: 0.05. 0.01 of simulation took: 0.011055 s
  Simulated till 0.06. Left: 0.04. 0.01 of simulation took: 0.011826 s
  Simulated till 0.07. Left: 0.03. 0.01 of simulation took: 0.012568 s
  Simulated till 0.08. Left: 0.02. 0.01 of simulation took: 0.028396 s
  Simulated till 0.09. Left: 0.01. 0.01 of simulation took: 0.01253 s
  Simulated till 0.1. Left: 1.38778e-17. 0.01 of simulation took: 0.024547 s
  Running the remaining 1.38778e-17.
  Finished simulation of 0.1 with minimum dt=1e-06 in 0.177653 s
```
- [ ] ./../snippets/multiscaleOneCompt.py

```
  ('event input', /model[0]/writer[0].eventInput, 0)
  <moose.NSDFWriter: id=487, dataIndex=0, path=/model[0]/writer[0]>
  /model[0]/writer[0]/eventInput[0]
  ('Starting simulation at:', '2018-07-20T14:43:00.468857')
  ('Finished simulation at:', '2018-07-20T14:43:00.681793')
```
- [ ] ./../snippets/gssaCylinderDiffusion.py

```
  /usr/lib/python3.6/site-packages/matplotlib/cbook/deprecation.py:107: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
    warnings.warn(message, mplDeprecation, stacklevel=1)
  (117892550.438441, 2.8274333882308142e-11, 0.045, 3.392920065876977e-06, -0.082, 1.017876019763093e-06)
  INCOMING:
  /clock ('parentMsg',) <--- / ('childOut',)
  OUTGOING:
  /clock ('process0', 'reinit0') ---> /model[0]/pg ('process', 'reinit')
  /clock ('process0', 'reinit0') ---> /model[0]/pg ('process', 'reinit')
  /clock ('process2', 'reinit2') ---> /model[0]/hhcomp[0]/na ('process', 'reinit')
  /clock ('process2', 'reinit2') ---> /model[0]/hhcomp[0]/k ('process', 'reinit')
  /clock ('process2', 'reinit2') ---> /model[0]/hhcomp[0]/na ('process', 'reinit')
  /clock ('process2', 'reinit2') ---> /model[0]/hhcomp[0]/k ('process', 'reinit')
  /clock ('process3', 'reinit3') ---> /model[0]/hhcomp ('initProc', 'initReinit')
  /clock ('process3', 'reinit3') ---> /model[0]/hhcomp ('initProc', 'initReinit')
  /clock ('process4', 'reinit4') ---> /model[0]/hhcomp ('process', 'reinit')
  /clock ('process4', 'reinit4') ---> /model[0]/hhcomp ('process', 'reinit')
  /clock ('process8', 'reinit8') ---> /data[0]/pulse ('process', 'reinit')
  /clock ('process8', 'reinit8') ---> /data[0]/Vm ('process', 'reinit')
  /clock ('process8', 'reinit8') ---> /data[0]/gK ('process', 'reinit')
  /clock ('process8', 'reinit8') ---> /data[0]/gNa ('process', 'reinit')
  /clock ('process8', 'reinit8') ---> /data[0]/pulse ('process', 'reinit')
  /clock ('process8', 'reinit8') ---> /data[0]/Vm ('process', 'reinit')
  /clock ('process8', 'reinit8') ---> /data[0]/gK ('process', 'reinit')
  /clock ('process8', 'reinit8') ---> /data[0]/gNa ('process', 'reinit')
  r e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.21779 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.13744 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.144043 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.8843 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.363065 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.806242 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.08762 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.1795 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.783342 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.396377 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.652143 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.726579 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.54664 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.24478 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.17953 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.218245 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.505292 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.535818 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.86142 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.4242 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.893338 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.47096 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.807648 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.244477 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.39177 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.418742 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.171042 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.633186 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.423747 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.77435 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.685265 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.294928 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.89584 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.96237 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.431746 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.740681 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.249467 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.209592 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.284524 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.935871 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.547407 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.302878 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.21966 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.263056 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.583885 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.16303 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.84929 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.305886 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.02172 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.914827 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.73716 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.68678 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.48602 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.213439 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.711379 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.61958 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.584175 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.208187 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.875231 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.358987 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.341839 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.815274 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.772858 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.13341 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.131008 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.85646 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.782526 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.990494 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.338646 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.793919 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.123092 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.11824 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.358459 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.250577 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.45065 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.38225 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.586005 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.504503 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.442562 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.243985 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.761643 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.217793 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.137438 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.144043 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.1157 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.636935 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.193758 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.1795 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.783342 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.603623 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.347857 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.726579 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.453356 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.244779 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.179534 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.90306 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.781755 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.494708 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.535818 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.86142 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.424203 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.10666 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.98734 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.470963 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.807648 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.755523 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.391766 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.581258 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.17104 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.366814 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.576253 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.22565 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.995396 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.952819 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.31473 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.294928 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.104158 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.56825 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.740681 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.249467 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.209592 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.284524 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.970727 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.45259 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.697122 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.219662 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.263056 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.416115 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.836969 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.15071 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.305886 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.06259 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.978278 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.914827 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.26284 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.31322 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.51398 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.786561 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.711379 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.38042 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.584175 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.20819 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.124769 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.358987 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.658161 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.08048 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.815274 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.227142 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -1.86659 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 0.987166 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.131008 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.143539 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra 1.02411 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  Info: Using threaded gsolve: 2 threads. 
```
- [ ] ./../snippets/pulsegen2.py

```
    Error compiling initString
    timeout: the monitored command dumped core
```
- [ ] ./../snippets/twocells.py

```
    Debug: User wants Ksolve with 3 threads
    
    
    Totals:	-3273.39	3377.49	
    gamma[20.92 0.05 0.00 0.01 0.01 Type=2 NegEig=2 PosEig=1 status=0 success Iter=16
    0.92 0.05 0.00 0.01 0.01 Type=2 NegEig=2 PosEig=1 status=0 success Iter=29
    0.18 0.75 0.00 0.03 0.01 Type=0 NegEig=3 PosEig=0 status=0 success Iter=10
    0.18 0.75 0.00 0.03 0.01 Type=0 NegEig=3 PosEig=0 status=0 success Iter=26
    0.18 0.75 0.00 0.03 0.01 Type=0 NegEig=3 PosEig=0 status=0 success Iter=27
    0.92 0.05 0.00 0.01 0.01 Type=2 NegEig=2 PosEig=1 status=0 success Iter=30
    0.18 0.75 0.00 0.03 0.01 Type=0 NeWarning: SteadyState iteration failed, status = input domain error, nIter = 4
    scale=0.010	kcat=0.004
    scale=0.013	kcat=0.005
    scale=0.016	kcat=0.006
    scale=0.020	kcat=0.007
    scale=0.025	kcat=0.009
    scale=0.032	kcat=0.011
    scale=0.040	kcat=0.014
    scale=0.050	kcat=0.018
    scale=0.063	kcat=0.023
    scale=0.079	kcat=0.029
    scale=0.100	kcat=0.036
    scale=0.126	kcat=0.045
    scale=0.158	kcat=0.057
    scale=0.200	kcat=0.072
    scale=0.251	kcat=0.091
    scale=0.316	kcat=0.114
    scale=0.398	kcat=0.144
    scale=0.501	kcat=0.181
    scale=0.631	kcat=0.228
    scale=0.794	kcat=0.287
    scale=1.000	kcat=0.361
    scale=1.259	kcat=0.454
    scale=1.585	kcat=0.572
    scale=1.995	kcat=0.720
    scale=2.512	kcat=0.907
    scale=3.162	kcat=1.142
    scale=3.981	kcat=1.437
    scale=5.012	kcat=1.809
    scale=6.310	kcat=2.278
    scale=7.943	kcat=2.868
    scale=10.000	kcat=3.610
    scale=12.589	kcat=4.545
    scale=15.849	kcat=5.722
    scale=19.953	kcat=7.203
    scale=25.119	kcat=9.068
    scale=31.623	kcat=11.416
    scale=39.811	kcat=14.372
    scale=50.119	kcat=18.093
    scale=63.096	kcat=22.778
    scale=79.433	kcat=28.676
    scale=100.000	kcat=36.101
    Traceback (most recent call last):
      File "doseResponse.py", line 126, in <module>
        main()
      File "doseResponse.py", line 112, in main
        pylab.semilogx(joint[0,:],joint[1,:],marker="o",label = 'concA')
      File "/usr/lib/python3.6/site-packages/matplotlib/pyplot.py", line 3490, in semilogx
        ret = ax.semilogx(*args, **kwargs)
      File "/usr/lib/python3.6/site-packages/matplotlib/axes/_axes.py", line 1724, in semilogx
        self.set_xscale('log', **d)
      File "/usr/lib/python3.6/site-packages/matplotlib/axes/_base.py", line 3183, in set_xscale
        ax.xaxis._set_scale(value, **kwargs)
      File "/usr/lib/python3.6/site-packages/matplotlib/axis.py", line 772, in _set_scale
        self._scale.set_default_locators_and_formatters(self)
      File "/usr/lib/python3.6/site-packages/matplotlib/scale.py", line 277, in set_default_locators_and_formatters
        axis.set_major_locator(LogLocator(self.base))
      File "/usr/lib/python3.6/site-packages/matplotlib/axis.py", line 1597, in set_major_locator
        self.stale = True
      File "/usr/lib/python3.6/site-packages/matplotlib/artist.py", line 241, in stale
        self.stale_callback(self, val)
      File "/usr/lib/python3.6/site-packages/matplotlib/artist.py", line 68, in _stale_axes_callback
        self.axes.stale = val
      File "/usr/lib/python3.6/site-packages/matplotlib/artist.py", line 241, in stale
        self.stale_callback(self, val)
      File "/usr/lib/python3.6/site-packages/matplotlib/figure.py", line 60, in _stale_figure_callback
        self.figure.stale = val
      File "/usr/lib/python3.6/site-packages/matplotlib/artist.py", line 241, in stale
        self.stale_callback(self, val)
      File "/usr/lib/python3.6/site-packages/matplotlib/pyplot.py", line 592, in _auto_draw_if_interactive
        fig.canvas.draw_idle()
      File "/usr/lib/python3.6/site-packages/matplotlib/backend_bases.py", line 2055, in draw_idle
        self.draw(*args, **kwargs)
      File "/usr/lib/python3.6/site-packages/matplotlib/backends/backend_agg.py", line 433, in draw
        self.figure.draw(self.renderer)
      File "/usr/lib/python3.6/site-packages/matplotlib/artist.py", line 55, in draw_wrapper
        return draw(artist, renderer, *args, **kwargs)
      File "/usr/lib/python3.6/site-packages/matplotlib/figure.py", line 1475, in draw
        renderer, self, artists, self.suppressComposite)
      File "/usr/lib/python3.6/site-packages/matplotlib/image.py", line 141, in _draw_list_compositing_images
        a.draw(renderer)
      File "/usr/lib/python3.6/site-packages/matplotlib/artist.py", line 55, in draw_wrapper
        return draw(artist, renderer, *args, **kwargs)
      File "/usr/lib/python3.6/site-packages/matplotlib/axes/_base.py", line 2607, in draw
        mimage._draw_list_compositing_images(renderer, self, artists)
      File "/usr/lib/python3.6/site-packages/matplotlib/image.py", line 141, in _draw_list_compositing_images
        a.draw(renderer)
      File "/usr/lib/python3.6/site-packages/matplotlib/artist.py", line 55, in draw_wrapper
        return draw(artist, renderer, *args, **kwargs)
      File "/usr/lib/python3.6/site-packages/matplotlib/axis.py", line 1190, in draw
        ticks_to_draw = self._update_ticks(renderer)
      File "/usr/lib/python3.6/site-packages/matplotlib/axis.py", line 1028, in _update_ticks
        tick_tups = list(self.iter_ticks())  # iter_ticks calls the locator
      File "/usr/lib/python3.6/site-packages/matplotlib/axis.py", line 971, in iter_ticks
        majorLocs = self.major.locator()
      File "/usr/lib/python3.6/site-packages/matplotlib/ticker.py", line 2089, in __call__
        return self.tick_values(vmin, vmax)
      File "/usr/lib/python3.6/site-packages/matplotlib/ticker.py", line 2115, in tick_values
        "Data has no positive values, and therefore can not be "
    ValueError: Data has no positive values, and therefore can not be log-scaled.
```
- [ ] ./../tutorials/ExcInhNet/ExcInhNet_Ostojic2014_Brunel2000.py

```
  just plotting old results for Fig 5.
  To simulate and save, give sim as commandline argument.
  You need to simulate first before loading data file.
  re-run with sim as a command line argument.
  rting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  Info: Using threaded gsolve: 2 threads. 
  WARNING: Extra 0.360362 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  WARNING: Extra -0.639638 molecules in system after converting fractional to integer e.g. 1.1 = 1 (~90% of times) or 2 (~10% of times).
  Info: Using threaded gsolve: 2 threads. 
```
